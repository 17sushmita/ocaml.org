# -*- mode:Makefile -*-

MPP_OPTIONS = -so '((!' -sc '!))' -son '{{!' -scn '!}}' -soc '' -scc '' -sec '' -sos '{{<' -scs '>}}' -its 
MPP = mpp ${MPP_OPTIONS}
OMD_OPTIONS = -r ocaml=./ocamltohtml -r tryocaml=./ocamlapplet.bash
OMD = omd ${OMD_OPTIONS}

all:ocamltohtml
	$(MAKE) ocaml.org
	bash gen.bash site
	$(MAKE) syncotherfiles

rss2html: rss2html.ml
	cd app && ocamlfind ocamlopt -package netstring,netclient,rss -c http.ml
	ocamlfind ocamlopt -package netstring,netclient,rss -linkpkg \
	  -I app/ http.cmx utils.cmx -annot "$<" -o "$@"

ocaml.org:
	find site -type d | while read l; do mkdir -p "$$(echo "$$l" | sed -e 's/^site/ocaml.org/')" ; done

ocamltohtml:lexer.ml ocamltohtml.ml
	ocamlopt -o $@ lexer.ml ocamltohtml.ml
	$(RM) ocamltohtml.o ocamltohtml.cm[ix] lexer.o lexer.cm[ix]

tpl/front_code_snippet.html:tpl/front_code_snippet.md
	${OMD} $< -o $@

clean:
	$(RM) -r ocaml.org *~ *.cmo *.cmi *.cma
	$(RM) tpl/front_code_snippet.html 

preview: relative_urls
	$(MAKE) all
	find ocaml.org -type f -name '*.html' | while read f; do \
	  ./relative_urls --path ocaml.org "$$f"; done

relative_urls: relative_urls.ml
	ocamlfind ocamlopt -package netstring -linkpkg -annot -g "$<" -o "$@"
	$(RM) $(addprefix relative_urls., o cmi cmx annot)

htmlescape:htmlescape.ml
	ocamlopt $< -o $@

.PHONY: pkg clean preview syncotherfiles

syncotherfiles:
	rsync --exclude '*.md' --exclude '*.html' -rltHprogv site/* ocaml.org/


ocaml.org/community/planet.html:rss2html
ocaml.org/learn/index.html:tpl/front_code_snippet.html
ocaml.org/index.html:tpl/front_code_snippet.html tpl/front_news.mpp
ocaml.org/community/index.html:tpl/front_news.mpp




